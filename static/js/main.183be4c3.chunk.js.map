{"version":3,"sources":["components/Sidebar/MainQuestionEdit.js","components/Sidebar/ChatOptionQuestionEdit.js","components/Sidebar/index.js","components/Questions.js","App.js","serviceWorker.js","index.js"],"names":["MainQuestionEdit","questions","currentQuestion","handleSubmit","handleOnChange","handleAddEditChatOption","clearForm","deleteOption","useState","deleteChatId","setDelete","handleDelete","event","chat_id","stopPropagation","onSubmit","className","type","value","onChange","htmlFor","id","name","chat_label","rows","chat_desc","onClick","chat_options","map","q","ind","key","reply_id","disabled","i","ChatOptionQuestionEdit","chatOptionsQuestion","handleBack","Sidebar","props","editQuestion","length","ifEditing","state","errors","this","_questions","setState","ifOption","_currentQuestion","target","preventDefault","console","log","_chatOptionsQuestion","parseInt","saveQuestions","showError","msg","setTimeout","currQuest","found","filter","co","c","bind","jsonValue","placeholder","handleJSONchange","ques","Object","keys","role","React","Component","Questions","setEditQuestion","downloadJSON","searchText","handleSearch","deleteQuestion","s","toLowerCase","qu","toString","includes","style","flexBasis","que","index","App","errorMsg","localQues","localStorage","getItem","localJson","parsedLocalQs","JSON","parse","e","question","newQues","setItem","stringify","timeout","timestamp","filtered","m","clearTimeout","timer","Date","now","errorObj","removeErr","r","filename","text","element","document","createElement","setAttribute","encodeURIComponent","display","body","appendChild","click","removeChild","download","json","valids","j","hasOwnProperty","handleSaveQuestion","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.183be4c3.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nexport const MainQuestionEdit = ({\n  questions,\n  currentQuestion,\n  handleSubmit,\n  handleOnChange,\n  handleAddEditChatOption,\n  clearForm,\n  deleteOption,\n}) => {\n  const [deleteChatId, setDelete] = useState(-1);\n  const handleDelete = (event, chat_id) => {\n    event.stopPropagation();\n    if (deleteChatId === chat_id) {\n      setDelete(-1)\n      deleteOption(chat_id)\n    } else {\n      setDelete(chat_id)\n    }\n  }\n  return (\n    <form onSubmit={(event) => handleSubmit(event, false)}>\n      <h3>Enter your chat details</h3>\n      <div className=\"input-group\">\n        <div className=\"input-group-prepend\">\n          <label className=\"input-group-text\">Chat ID#</label>\n        </div>\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          value={currentQuestion.chat_id}\n          onChange={(event) => handleOnChange(event, false)}\n        />\n      </div>\n      <div className=\"form-group\">\n        <label htmlFor=\"chatLabel\">Chat Label</label>\n        <textarea\n          type=\"text\"\n          className=\"form-control\"\n          id=\"chatLabel\"\n          name=\"chat_label\"\n          value={currentQuestion.chat_label}\n          rows=\"3\"\n          onChange={(event) => handleOnChange(event, false)}\n        />\n      </div>\n      <div className=\"form-group\">\n        <label htmlFor=\"chatDesc\">Chat Description</label>\n        <textarea\n          type=\"text\"\n          className=\"form-control\"\n          id=\"chatDesc\"\n          name=\"chat_desc\"\n          rows=\"4\"\n          value={currentQuestion.chat_desc}\n          onChange={(event) => handleOnChange(event, false)}\n        />\n      </div>\n      <div className=\"form-group\">\n        <label htmlFor=\"chatType\">Chat Type</label>\n        <select\n          className=\"form-control\"\n          id=\"chatType\"\n          name=\"type\"\n          value={currentQuestion.type}\n          onChange={(event) => handleOnChange(event, false)}\n        >\n          <option value=\"\">Select Type</option>\n          <option value=\"q\">Question</option>\n          <option value=\"ol\">Options List</option>\n          <option value=\"a\">Answer</option>\n          <option value=\"c\">Contact us</option>\n          <option value=\"i\">Info Message</option>\n        </select>\n      </div>\n      <div className=\"form-group mb3\">\n        <label htmlFor=\"replayId\">Chat Options</label>\n        <button\n          type=\"button\"\n          className=\"btn btn-outline-info mb-1 w-100\"\n          onClick={() => handleAddEditChatOption(currentQuestion)}\n        >\n          + Add Chat Options\n        </button>\n        {currentQuestion.chat_options.map((q, ind) => (\n          <button\n            type=\"button\"\n            className=\"btn btn-outline-dark mb-1 w-100\"\n            key={'ol_ques_' + ind}\n            onClick={() => handleAddEditChatOption(q)}\n          >\n            {q.chat_label && <p className=\"m-0\">{q.chat_label}</p>}\n            {q.chat_desc && (\n              <p className=\"m-0\">\n                <small>{q.chat_desc}</small>\n              </p>\n            )}\n            <span className={`btn ${deleteChatId === q.chat_id ? 'btn-danger' : 'btn-outline-danger'} btn-sm`} onClick={(event) => handleDelete(event, q.chat_id)}>{deleteChatId === q.chat_id ? 'Confirm Delete' : 'Delete'}</span>\n            {\n              deleteChatId === q.chat_id && (\n                <span className={`btn btn-link btn-sm text-warning`} onClick={(event) => handleDelete(event, -1)}>Cancel</span>\n              )\n            }\n          </button>\n        ))}\n      </div>\n      {currentQuestion.type !== 'ol' ? (\n        <div className=\"form-group\">\n          <label htmlFor=\"replayId\">Chat Replay</label>\n          <select\n            className=\"form-control\"\n            id=\"replayId\"\n            name=\"reply_id\"\n            onChange={(event) => handleOnChange(event, false)}\n            value={currentQuestion.reply_id}\n          >\n            <option value={null} disabled>Select Chat Replay</option>\n            <option value=\"\">No Reply</option>\n            {questions.map((q, i) => (\n              <option\n                key={'opt_' + i}\n                value={q.chat_id}\n                disabled={q.reply_id === currentQuestion.chat_id}\n              >\n                {'#' + q.chat_id} : {q.chat_label || q.chat_desc}\n              </option>\n            ))}\n          </select>\n        </div>\n      ) : null}\n      <button type=\"submit\" className=\"btn btn-primary\">\n        Submit\n      </button>\n      <button\n        type=\"button\"\n        className=\"ml-3 btn btn-outline-primary\"\n        onClick={clearForm}\n      >\n        Clear Form\n      </button>\n    </form>\n  );\n};\n","import React from 'react';\n\nexport const ChatOptionQuestionEdit = ({\n  questions,\n  chatOptionsQuestion,\n  handleSubmit,\n  handleOnChange,\n  currentQuestion,\n  handleBack,\n}) => {\n  return (\n    <form onSubmit={(event) => handleSubmit(event, true)}>\n      <div className=\"action-bar d-flex align-items-center mb-3\">\n        <button\n          type=\"button\"\n          className=\"btn btn-outline-dark\"\n          onClick={handleBack}\n        >\n          Back\n        </button>\n        <h5 className=\"m-0 ml-2\">\n          Adding Chat options for Chat ID# {currentQuestion.chat_id}\n        </h5>\n      </div>\n      <div className=\"input-group\">\n        <div className=\"input-group-prepend\">\n          <label className=\"input-group-text\">Chat ID#</label>\n        </div>\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          value={chatOptionsQuestion.chat_id}\n          onChange={(event) => handleOnChange(event, true)}\n        />\n      </div>\n      <div className=\"form-group\">\n        <label htmlFor=\"chatLabel\">Chat Label</label>\n        <textarea\n          type=\"text\"\n          className=\"form-control\"\n          id=\"chatLabel\"\n          name=\"chat_label\"\n          value={chatOptionsQuestion.chat_label}\n          rows=\"3\"\n          onChange={(event) => handleOnChange(event, true)}\n        />\n      </div>\n      <div className=\"form-group\">\n        <label htmlFor=\"chatDesc\">Chat Description</label>\n        <textarea\n          type=\"text\"\n          className=\"form-control\"\n          id=\"chatDesc\"\n          name=\"chat_desc\"\n          rows=\"4\"\n          value={chatOptionsQuestion.chat_desc}\n          onChange={(event) => handleOnChange(event, true)}\n        />\n      </div>\n      <div className=\"form-group\">\n        <label htmlFor=\"chatType\">Chat Type</label>\n        <select\n          className=\"form-control\"\n          id=\"chatType\"\n          name=\"type\"\n          value={chatOptionsQuestion.type}\n          onChange={(event) => handleOnChange(event, true)}\n        >\n          <option value=\"\">Select Type</option>\n          <option value=\"q\">Question</option>\n          <option value=\"a\">Answer</option>\n          <option value=\"c\">Contact us</option>\n          <option value=\"i\">Info Message</option>\n        </select>\n      </div>\n      <div className=\"form-group\">\n        <label htmlFor=\"replayId\">Chat Replay</label>\n        <select\n          className=\"form-control\"\n          id=\"replayId\"\n          name=\"reply_id\"\n          onChange={(event) => handleOnChange(event, true)}\n          value={chatOptionsQuestion.reply_id}\n        >\n          <option value={null} disabled>Select Chat Replay</option>\n          <option value=\"\">No Reply</option>\n          {questions.map((q, i) => (\n            <option\n              key={'opt_' + i}\n              value={q.chat_id}\n              disabled={q.reply_id === currentQuestion.chat_id}\n            >\n              {'#' + q.chat_id} : {q.chat_label || q.chat_desc}\n            </option>\n          ))}\n        </select>\n      </div>\n      <button type=\"submit\" className=\"btn btn-primary\">\n        Submit\n      </button>\n    </form>\n  );\n};\n","import React from 'react';\nimport { MainQuestionEdit } from './MainQuestionEdit';\nimport { ChatOptionQuestionEdit } from './ChatOptionQuestionEdit';\n\nclass Sidebar extends React.Component {\n  constructor(props) {\n    super(props);\n    const { questions, editQuestion } = props;\n    const currentQuestion = {\n      chat_id: (questions && questions.length) || 0,\n      chat_label: '',\n      chat_desc: '',\n      chat_options: [],\n      type: '',\n      reply_id: '',\n    };\n    let ifEditing = false;\n    if (editQuestion) {\n      currentQuestion.chat_id = editQuestion.chat_id;\n      currentQuestion.chat_label = editQuestion.chat_label;\n      currentQuestion.chat_desc = editQuestion.chat_desc;\n      currentQuestion.chat_options = editQuestion.chat_options;\n      currentQuestion.type = editQuestion.type;\n      currentQuestion.reply_id = editQuestion.reply_id;\n      ifEditing = true;\n    }\n    const chatOptionsQuestion = { ...currentQuestion };\n    this.state = {\n      questions: questions || [],\n      currentQuestion,\n      chatOptionsQuestion,\n      ifEditing,\n      errors: {},\n    };\n  }\n  componentDidUpdate() {\n    const { editQuestion, questions } = this.props;\n    const { currentQuestion, questions: _questions } = this.state;\n    if (editQuestion && currentQuestion.chat_id !== editQuestion.chat_id) {\n      currentQuestion.chat_id = editQuestion.chat_id;\n      currentQuestion.chat_label = editQuestion.chat_label;\n      currentQuestion.chat_desc = editQuestion.chat_desc;\n      currentQuestion.chat_options = editQuestion.chat_options;\n      currentQuestion.type = editQuestion.type;\n      currentQuestion.reply_id = editQuestion.reply_id || '';\n      this.setState({\n        currentQuestion,\n        ifEditing: true,\n      });\n      this.handleBack();\n    }\n    if (_questions.length !== questions.length) {\n      currentQuestion.chat_id = questions.length;\n      this.setState({\n        questions,\n        currentQuestion,\n      });\n    }\n  }\n  handleOnChange(event, ifOption) {\n    const _currentQuestion = this.state[\n      ifOption ? 'chatOptionsQuestion' : 'currentQuestion'\n    ];\n    _currentQuestion[event.target.name] = event.target.value;\n    this.setState({\n      [ifOption ? 'chatOptionsQuestion' : 'currentQuestion']: _currentQuestion,\n    });\n  }\n  handleSubmit(event, ifOption) {\n    event.preventDefault();\n    console.log('handlesubmit');\n    const { chatOptionsQuestion, currentQuestion } = this.state;\n    if (ifOption) {\n      const _chatOptionsQuestion = { ...chatOptionsQuestion };\n      _chatOptionsQuestion.reply_id = parseInt(_chatOptionsQuestion.reply_id);\n      const _currentQuestion = { ...currentQuestion };\n      console.log(_chatOptionsQuestion.chat_options.length);\n      _currentQuestion.chat_options = [..._currentQuestion.chat_options, _chatOptionsQuestion];\n      _currentQuestion.type = 'ol';\n      _currentQuestion.reply_id = '';\n      console.log(_chatOptionsQuestion.chat_options.length);\n      this.setState(\n        {\n          currentQuestion: _currentQuestion,\n        },\n        () => this.handleBack()\n      );\n    } else {\n      if (currentQuestion.chat_label || currentQuestion.chat_desc) {\n        this.props.saveQuestions(currentQuestion);\n        this.clearForm(currentQuestion);\n      } else {\n        this.showError('Please add chat label or description');\n      }\n    }\n  }\n  showError(msg) {\n    this.setState(\n      {\n        errors: {\n          '0': msg,\n        },\n      },\n      () => {\n        setTimeout(() => {\n          this.setState({\n            errors: {},\n          });\n        }, 5000);\n      }\n    );\n  }\n  clearForm() {\n    console.log('clearform');\n    this.props.saveQuestions(null);\n    this.setState({\n      ifEditing: false,\n      currentQuestion: {\n        chat_id: this.state.questions.length,\n        chat_label: '',\n        chat_desc: '',\n        chat_options: [],\n        type: '',\n        reply_id: '',\n      },\n    });\n  }\n  handleAddEditChatOption(currQuest) {\n    if (currQuest) {\n      const { currentQuestion } = this.state;\n      const found = currentQuestion.chat_options.filter(\n        (q) => q.chat_id === currQuest.chat_id\n      );\n      if (found.length) {\n        this.setState({\n          chatOptionsQuestion: found[0],\n          ifEditing: true\n        });\n      } else {\n        const id = currQuest.chat_id * 100 + currQuest.chat_options.length;\n        const _chatOptionsQuestion = this.state.chatOptionsQuestion;\n        _chatOptionsQuestion.chat_id = id;\n        this.setState({\n          chatOptionsQuestion: _chatOptionsQuestion,\n          ifEditing: true\n        });\n      }\n    }\n  }\n  handleBack() {\n    const _chatOptionsQuestion = { ...this.state.chatOptionsQuestion };\n    _chatOptionsQuestion.chat_desc = '';\n    _chatOptionsQuestion.chat_id = 0;\n    _chatOptionsQuestion.chat_label = '';\n    _chatOptionsQuestion.chat_options = [];\n    _chatOptionsQuestion.reply_id = '';\n    _chatOptionsQuestion.type = '';\n    this.setState({\n      chatOptionsQuestion: _chatOptionsQuestion,\n      ifEditing: false\n    });\n  }\n  deleteOption(chat_id) {\n    const _currentQuestion = { ...this.state.currentQuestion };\n    const co = _currentQuestion.chat_options.filter(c => c.chat_id !== chat_id);\n    _currentQuestion.chat_options = co;\n    this.setState({\n      currentQuestion: _currentQuestion\n    })\n  }\n  render() {\n    const {\n      questions,\n      currentQuestion,\n      chatOptionsQuestion,\n      ifEditing,\n      errors,\n    } = this.state;\n    return (\n      <div className=\"sidebar col-12 col-md-6 col-sm-6\">\n        {chatOptionsQuestion.chat_id && ifEditing ? (\n          <ChatOptionQuestionEdit\n            questions={questions}\n            currentQuestion={currentQuestion}\n            chatOptionsQuestion={chatOptionsQuestion}\n            handleOnChange={(event, ifOption) =>\n              this.handleOnChange(event, ifOption)\n            }\n            handleBack={this.handleBack.bind(this)}\n            handleSubmit={(event, ifOption) =>\n              this.handleSubmit(event, ifOption)\n            }\n          />\n        ) : (\n            <>\n              <div className=\"form-group\">\n                <h3 htmlFor=\"jsonField\">If you already have json paste here</h3>\n                <textarea\n                  className=\"form-control\"\n                  rows=\"4\" id=\"jsonField\"\n                  value={this.props.jsonValue}\n                  placeholder=\"Paste your json here...\"\n                  onChange={this.props.handleJSONchange}></textarea>\n              </div>\n              <MainQuestionEdit\n                clearForm={this.clearForm.bind(this)}\n                handleAddEditChatOption={(ques) =>\n                  this.handleAddEditChatOption(ques)\n                }\n                deleteOption={this.deleteOption.bind(this)}\n                questions={questions}\n                currentQuestion={currentQuestion}\n                handleOnChange={(event, ifOption) =>\n                  this.handleOnChange(event, ifOption)\n                }\n                handleSubmit={(event, ifOption) =>\n                  this.handleSubmit(event, ifOption)\n                }\n              />\n            </>\n          )}\n        {Object.keys(errors).length ? (\n          <div className=\"my-3\">\n            <h5>Errors:</h5>\n            {Object.keys(errors).map((key) => (\n              <div\n                className=\"alert alert-danger fade-scale-up\"\n                role=\"alert\"\n                key={'err_' + key}\n              >\n                {errors[key]}\n              </div>\n            ))}\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default Sidebar;\n","import React, { useState } from 'react';\n\nconst Questions = ({ questions, setEditQuestion, downloadJSON, searchText, handleSearch, deleteQuestion }) => {\n  const [deleteChatId, setDelete] = useState(-1);\n  let _questions = [];\n  if (searchText) {\n    const s = searchText.toLowerCase();\n    _questions = questions.filter(qu => qu.chat_id.toString().toLowerCase().includes(s) || qu.chat_label.toLowerCase().includes(s) || qu.chat_desc.toLowerCase().includes(s) || (qu.reply_id && qu.reply_id.toString().toLowerCase().includes(s)))\n  }\n  else {\n    _questions = questions\n  }\n  const handleDelete = (event, chat_id) => {\n    event.stopPropagation();\n    if (deleteChatId === chat_id) {\n      setDelete(-1)\n      deleteQuestion(chat_id)\n    } else {\n      setDelete(chat_id)\n    }\n  }\n  return (\n    <div className=\"questions col-12 col-md-6 col-sm-6\">\n      <div className=\"action-bar d-flex align-items-center justify-content-between\">\n        <h5 className=\"m-0 ml-2\">Chat boat Questions</h5>\n        <button className=\"btn btn-primary\" onClick={downloadJSON}>\n          Download JSON\n        </button>\n        <div className=\"input-group px-0 mt-3\" style={{ flexBasis: '100%' }}>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            value={searchText}\n            onChange={(event) => handleSearch(event.target.value)}\n          />\n          <div className=\"input-group-append\">\n            <button className=\"btn btn-secondary\" onClick={() => handleSearch('')}>Clear</button>\n          </div>\n        </div>\n      </div>\n      {(_questions &&\n        _questions.length) ?\n        _questions.map((que, index) => (\n          <div\n            className=\"card mb-2\"\n            key={'ques_' + index}\n            onClick={() => setEditQuestion(que)}\n          >\n            <div className=\"card-body\">\n              <h6 className=\"card-text d-flex align-items-center justify-content-between\">\n                <span>\n                  Chat ID# <strong>{que.chat_id}</strong>\n                </span>\n                {que.reply_id && <span>Reply Id# {que.reply_id}</span>}\n              </h6>\n              <h5 className=\"card-title\">{que.chat_label}</h5>\n              <p className=\"card-text\">{que.chat_desc}</p>\n              <button className={`btn ${deleteChatId === que.chat_id ? 'btn-danger' : 'btn-outline-danger'} btn-sm`} onClick={(event) => handleDelete(event, que.chat_id)}>{deleteChatId === que.chat_id ? 'Confirm Delete' : 'Delete'}</button>\n              {\n                deleteChatId === que.chat_id && (\n                  <button className={`btn btn-outline-light' btn-sm`} onClick={(event) => handleDelete(event, -1)}>Cancel</button>\n                )\n              }\n            </div>\n          </div>\n        )) : (\n          <div className=\"alert alert-info fade-scale-up\" role=\"alert\">\n            No questions added yet\n          </div>\n        )}\n    </div>\n  );\n};\n\nexport default Questions;\n","import React from 'react';\nimport './App.css';\nimport Sidebar from './components/Sidebar/';\nimport Questions from './components/Questions';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      questions: [],\n      editQuestion: null,\n      jsonValue: '',\n      errorMsg: [],\n      searchText: ''\n    };\n  }\n  componentDidMount() {\n    const localQues = localStorage.getItem('questions');\n    const localJson = localStorage.getItem('jsonValue');\n    let parsedLocalQs = null;\n    if (localQues) {\n      try {\n        parsedLocalQs = JSON.parse(localQues);\n      }\n      catch (e) {\n        console.log(e);\n      }\n    }\n    if (parsedLocalQs && localJson) {\n      this.setState({\n        questions: parsedLocalQs,\n        jsonValue: localJson,\n      })\n    }\n    else if (parsedLocalQs) {\n      this.setState({\n        questions: parsedLocalQs,\n      })\n    }\n    else if (localJson) {\n      this.setState({\n        jsonValue: localJson,\n      })\n    }\n  }\n  setEditQuestion(question) {\n    if (question) {\n      this.setState({\n        editQuestion: question,\n      });\n    }\n  }\n  handleSaveQuestion(question) {\n    if (question) {\n      const { questions } = this.state;\n      const found = questions.filter((q) => q.chat_id === question.chat_id);\n      let newQues = [];\n      if (found.length) {\n        newQues = questions.map((q) => {\n          if (q.chat_id === question.chat_id) {\n            return question;\n          }\n          return q;\n        });\n      } else {\n        newQues = [...questions, question];\n      }\n      this.saveQuestions(newQues);\n    } else {\n      this.setState({\n        editQuestion: null,\n      });\n    }\n  }\n  saveQuestions(newQues) {\n    this.setState({\n      questions: newQues,\n      editQuestion: null,\n    });\n    localStorage.setItem('questions', JSON.stringify(newQues));\n    this.showError('Questions updated successfully')\n  }\n  removeErr(timeout, timestamp) {\n    const { errorMsg } = this.state;\n    const filtered = errorMsg.filter(m => m.timestamp !== timestamp);\n    this.setState({\n      errorMsg: [...filtered],\n    });\n    clearTimeout(timeout);\n  }\n  showError(msg, timer) {\n    const { errorMsg } = this.state;\n    const timestamp = Date.now();\n    const errorObj = {\n      msg, timer: () => {\n        const timeout = setTimeout(() => {\n          this.removeErr(timeout, timestamp);\n        }, timer || 5000);\n        return timeout;\n      },\n      timestamp\n    }\n    this.setState(\n      {\n        errorMsg: [...errorMsg, errorObj],\n      },\n      () => {\n        const r = errorObj.timer();\n        console.log('tmr', r);\n      }\n    );\n  }\n  downloadJSON() {\n    const download = (filename, text) => {\n      var element = document.createElement('a');\n      element.setAttribute(\n        'href',\n        'data:text/plain;charset=utf-8,' + encodeURIComponent(text)\n      );\n      element.setAttribute('download', filename);\n\n      element.style.display = 'none';\n      document.body.appendChild(element);\n\n      element.click();\n\n      document.body.removeChild(element);\n    };\n    download('questions.json', JSON.stringify(this.state.questions));\n    localStorage.setItem('questions', JSON.stringify(this.state.questions));\n  }\n  handleJSONchange(event) {\n    const value = event.target.value;\n    try {\n      const json = JSON.parse(value);\n      if (json && json.length) {\n        const valids = json.filter(j => {\n          if (j.hasOwnProperty('chat_id') && j.hasOwnProperty('chat_label') && j.hasOwnProperty('chat_options') &&\n            j.hasOwnProperty('type') && j.hasOwnProperty('reply_id') && j.hasOwnProperty('chat_desc')) {\n            return true;\n          }\n          else {\n            this.showError('Following field has missing keys\\n' + JSON.stringify(j), 20000)\n          }\n          return false;\n        })\n        console.log(valids)\n        localStorage.setItem('jsonValue', value);\n        localStorage.setItem('questions', JSON.stringify(json));\n        this.setState({\n          jsonValue: value,\n          questions: json,\n        })\n      }\n    }\n    catch (e) {\n      console.log(e);\n      this.setState({\n        jsonValue: value,\n      })\n      value !== '' && this.showError('Invalid json format')\n    }\n  }\n  handleSearch(value) {\n    this.setState({\n      searchText: value,\n    })\n  }\n  deleteQuestion(chat_id) {\n    const { questions } = this.state;\n    const filtered = questions.filter(q => q.chat_id !== chat_id);\n    this.saveQuestions(filtered);\n  }\n  render() {\n    const { questions, editQuestion, jsonValue, errorMsg, searchText } = this.state;\n    return (\n      <div className=\"App container-fluid\">\n        {errorMsg.length > 0 &&\n          <div className=\"toast-wrapper\">\n            {\n              errorMsg.map(m => (\n                <div className=\"alert alert-dark my-2 p-3 toast border-0\" role=\"alert\" key={m.msg}>\n                  {m.msg}\n                  {m.timestamp}\n                  <br></br>\n                  <button className=\"btn btn-outline-light my-2\" onClick={() => this.removeErr(m.timer(), m.timestamp)}>Done</button>\n                </div>\n              ))\n            }\n          </div>\n        }\n        <div className=\"row\">\n          <Sidebar\n            jsonValue={jsonValue}\n            handleJSONchange={this.handleJSONchange.bind(this)}\n            questions={questions}\n            editQuestion={editQuestion}\n            saveQuestions={this.handleSaveQuestion.bind(this)}\n          />\n          <Questions\n            searchText={searchText}\n            handleSearch={this.handleSearch.bind(this)}\n            downloadJSON={this.downloadJSON.bind(this)}\n            questions={questions}\n            editQuestion={editQuestion}\n            setEditQuestion={this.setEditQuestion.bind(this)}\n            deleteQuestion={this.deleteQuestion.bind(this)}\n          />\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}