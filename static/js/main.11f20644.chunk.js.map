{"version":3,"sources":["components/Sidebar/MainQuestionEdit.js","components/Sidebar/ChatOptionQuestionEdit.js","components/Sidebar/index.js","components/Questions.js","App.js","serviceWorker.js","index.js"],"names":["MainQuestionEdit","questions","currentQuestion","handleSubmit","handleOnChange","handleAddEditChatOption","clearForm","onSubmit","event","className","type","value","chat_id","onChange","htmlFor","id","name","chat_label","rows","chat_desc","onClick","chat_options","map","q","ind","key","reply_id","disabled","i","ChatOptionQuestionEdit","chatOptionsQuestion","handleBack","Sidebar","props","editQuestion","length","ifEditing","state","errors","this","_questions","setState","ifOption","_currentQuestion","target","preventDefault","console","log","_chatOptionsQuestion","parseInt","opts","push","saveQuestions","showError","msg","setTimeout","currQuest","found","filter","bind","jsonValue","placeholder","handleJSONchange","ques","Object","keys","role","React","Component","Questions","setEditQuestion","downloadJSON","searchText","handleSearch","deleteQuestion","useState","deleteChatId","setDelete","s","toLowerCase","qu","toString","includes","handleDelete","stopPropagation","style","flexBasis","que","index","App","errorMsg","localQues","localStorage","getItem","localJson","parsedLocalQs","JSON","parse","e","question","newQues","setItem","stringify","timeout","timestamp","filtered","m","clearTimeout","timer","Date","now","errorObj","removeErr","r","filename","text","element","document","createElement","setAttribute","encodeURIComponent","display","body","appendChild","click","removeChild","download","json","valids","j","hasOwnProperty","handleSaveQuestion","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.11f20644.chunk.js","sourcesContent":["import React from 'react';\n\nexport const MainQuestionEdit = ({\n  questions,\n  currentQuestion,\n  handleSubmit,\n  handleOnChange,\n  handleAddEditChatOption,\n  clearForm,\n}) => {\n  return (\n    <form onSubmit={(event) => handleSubmit(event, false)}>\n      <h3>Enter your chat details</h3>\n      <div className=\"input-group\">\n        <div className=\"input-group-prepend\">\n          <label className=\"input-group-text\">Chat ID#</label>\n        </div>\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          value={currentQuestion.chat_id}\n          onChange={(event) => handleOnChange(event, false)}\n        />\n      </div>\n      <div className=\"form-group\">\n        <label htmlFor=\"chatLabel\">Chat Label</label>\n        <textarea\n          type=\"text\"\n          className=\"form-control\"\n          id=\"chatLabel\"\n          name=\"chat_label\"\n          value={currentQuestion.chat_label}\n          rows=\"3\"\n          onChange={(event) => handleOnChange(event, false)}\n        />\n      </div>\n      <div className=\"form-group\">\n        <label htmlFor=\"chatDesc\">Chat Description</label>\n        <textarea\n          type=\"text\"\n          className=\"form-control\"\n          id=\"chatDesc\"\n          name=\"chat_desc\"\n          rows=\"4\"\n          value={currentQuestion.chat_desc}\n          onChange={(event) => handleOnChange(event, false)}\n        />\n      </div>\n      <div className=\"form-group\">\n        <label htmlFor=\"chatType\">Chat Type</label>\n        <select\n          className=\"form-control\"\n          id=\"chatType\"\n          name=\"type\"\n          value={currentQuestion.type}\n          onChange={(event) => handleOnChange(event, false)}\n        >\n          <option value=\"\">Select Type</option>\n          <option value=\"q\">Question</option>\n          <option value=\"ol\">Options List</option>\n          <option value=\"a\">Answer</option>\n          <option value=\"c\">Contact us</option>\n          <option value=\"i\">Info Message</option>\n        </select>\n      </div>\n      <div className=\"form-group mb3\">\n        <label htmlFor=\"replayId\">Chat Options</label>\n        <button\n          type=\"button\"\n          className=\"btn btn-outline-info mb-1 w-100\"\n          onClick={() => handleAddEditChatOption(currentQuestion)}\n        >\n          + Add Chat Options\n        </button>\n        {currentQuestion.chat_options.map((q, ind) => (\n          <button\n            type=\"button\"\n            className=\"btn btn-outline-dark mb-1 w-100\"\n            key={'ol_ques_' + ind}\n            onClick={() => handleAddEditChatOption(q)}\n          >\n            {q.chat_label && <p className=\"m-0\">{q.chat_label}</p>}\n            {q.chat_desc && (\n              <p className=\"m-0\">\n                <small>{q.chat_desc}</small>\n              </p>\n            )}\n          </button>\n        ))}\n      </div>\n      {currentQuestion.type !== 'ol' ? (\n        <div className=\"form-group\">\n          <label htmlFor=\"replayId\">Chat Replay</label>\n          <select\n            className=\"form-control\"\n            id=\"replayId\"\n            name=\"reply_id\"\n            onChange={(event) => handleOnChange(event, false)}\n            value={currentQuestion.reply_id}\n          >\n            <option value={null} disabled>Select Chat Replay</option>\n            <option value=\"\">No Reply</option>\n            {questions.map((q, i) => (\n              <option\n                key={'opt_' + i}\n                value={q.chat_id}\n                disabled={q.reply_id === currentQuestion.chat_id}\n              >\n                {'#' + q.chat_id} : {q.chat_label || q.chat_desc}\n              </option>\n            ))}\n          </select>\n        </div>\n      ) : null}\n      <button type=\"submit\" className=\"btn btn-primary\">\n        Submit\n      </button>\n      <button\n        type=\"button\"\n        className=\"ml-3 btn btn-outline-primary\"\n        onClick={clearForm}\n      >\n        Clear Form\n      </button>\n    </form>\n  );\n};\n","import React from 'react';\n\nexport const ChatOptionQuestionEdit = ({\n  questions,\n  chatOptionsQuestion,\n  handleSubmit,\n  handleOnChange,\n  currentQuestion,\n  handleBack,\n}) => {\n  return (\n    <form onSubmit={(event) => handleSubmit(event, true)}>\n      <div className=\"action-bar d-flex align-items-center mb-3\">\n        <button\n          type=\"button\"\n          className=\"btn btn-outline-dark\"\n          onClick={handleBack}\n        >\n          Back\n        </button>\n        <h5 className=\"m-0 ml-2\">\n          Adding Chat options for Chat ID# {currentQuestion.chat_id}\n        </h5>\n      </div>\n      <div className=\"input-group\">\n        <div className=\"input-group-prepend\">\n          <label className=\"input-group-text\">Chat ID#</label>\n        </div>\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          value={chatOptionsQuestion.chat_id}\n          onChange={(event) => handleOnChange(event, true)}\n        />\n      </div>\n      <div className=\"form-group\">\n        <label htmlFor=\"chatLabel\">Chat Label</label>\n        <textarea\n          type=\"text\"\n          className=\"form-control\"\n          id=\"chatLabel\"\n          name=\"chat_label\"\n          value={chatOptionsQuestion.chat_label}\n          rows=\"3\"\n          onChange={(event) => handleOnChange(event, true)}\n        />\n      </div>\n      <div className=\"form-group\">\n        <label htmlFor=\"chatDesc\">Chat Description</label>\n        <textarea\n          type=\"text\"\n          className=\"form-control\"\n          id=\"chatDesc\"\n          name=\"chat_desc\"\n          rows=\"4\"\n          value={chatOptionsQuestion.chat_desc}\n          onChange={(event) => handleOnChange(event, true)}\n        />\n      </div>\n      <div className=\"form-group\">\n        <label htmlFor=\"chatType\">Chat Type</label>\n        <select\n          className=\"form-control\"\n          id=\"chatType\"\n          name=\"type\"\n          value={chatOptionsQuestion.type}\n          onChange={(event) => handleOnChange(event, true)}\n        >\n          <option value=\"\">Select Type</option>\n          <option value=\"q\">Question</option>\n          <option value=\"a\">Answer</option>\n          <option value=\"c\">Contact us</option>\n          <option value=\"i\">Info Message</option>\n        </select>\n      </div>\n      <div className=\"form-group\">\n        <label htmlFor=\"replayId\">Chat Replay</label>\n        <select\n          className=\"form-control\"\n          id=\"replayId\"\n          name=\"reply_id\"\n          onChange={(event) => handleOnChange(event, true)}\n          value={chatOptionsQuestion.reply_id}\n        >\n          <option value={null} disabled>Select Chat Replay</option>\n          <option value=\"\">No Reply</option>\n          {questions.map((q, i) => (\n            <option\n              key={'opt_' + i}\n              value={q.chat_id}\n              disabled={q.reply_id === currentQuestion.chat_id}\n            >\n              {'#' + q.chat_id} : {q.chat_label || q.chat_desc}\n            </option>\n          ))}\n        </select>\n      </div>\n      <button type=\"submit\" className=\"btn btn-primary\">\n        Submit\n      </button>\n    </form>\n  );\n};\n","import React from 'react';\nimport { MainQuestionEdit } from './MainQuestionEdit';\nimport { ChatOptionQuestionEdit } from './ChatOptionQuestionEdit';\n\nclass Sidebar extends React.Component {\n  constructor(props) {\n    super(props);\n    const { questions, editQuestion } = props;\n    const currentQuestion = {\n      chat_id: (questions && questions.length) || 0,\n      chat_label: '',\n      chat_desc: '',\n      chat_options: [],\n      type: '',\n      reply_id: '',\n    };\n    let ifEditing = false;\n    if (editQuestion) {\n      currentQuestion.chat_id = editQuestion.chat_id;\n      currentQuestion.chat_label = editQuestion.chat_label;\n      currentQuestion.chat_desc = editQuestion.chat_desc;\n      currentQuestion.chat_options = editQuestion.chat_options;\n      currentQuestion.type = editQuestion.type;\n      currentQuestion.reply_id = editQuestion.reply_id;\n      ifEditing = true;\n    }\n    const chatOptionsQuestion = { ...currentQuestion };\n    this.state = {\n      questions: questions || [],\n      currentQuestion,\n      chatOptionsQuestion,\n      ifEditing,\n      errors: {},\n    };\n  }\n  componentDidUpdate() {\n    const { editQuestion, questions } = this.props;\n    const { currentQuestion, questions: _questions } = this.state;\n    if (editQuestion && currentQuestion.chat_id !== editQuestion.chat_id) {\n      currentQuestion.chat_id = editQuestion.chat_id;\n      currentQuestion.chat_label = editQuestion.chat_label;\n      currentQuestion.chat_desc = editQuestion.chat_desc;\n      currentQuestion.chat_options = editQuestion.chat_options;\n      currentQuestion.type = editQuestion.type;\n      currentQuestion.reply_id = editQuestion.reply_id || '';\n      this.setState({\n        currentQuestion,\n        ifEditing: true,\n      });\n      this.handleBack();\n    }\n    if (_questions.length !== questions.length) {\n      currentQuestion.chat_id = questions.length;\n      this.setState({\n        questions,\n        currentQuestion,\n      });\n    }\n  }\n  handleOnChange(event, ifOption) {\n    const _currentQuestion = this.state[\n      ifOption ? 'chatOptionsQuestion' : 'currentQuestion'\n    ];\n    _currentQuestion[event.target.name] = event.target.value;\n    this.setState({\n      [ifOption ? 'chatOptionsQuestion' : 'currentQuestion']: _currentQuestion,\n    });\n  }\n  handleSubmit(event, ifOption) {\n    event.preventDefault();\n    console.log('handlesubmit');\n    const { chatOptionsQuestion, currentQuestion } = this.state;\n    if (ifOption) {\n      const _chatOptionsQuestion = { ...chatOptionsQuestion };\n      _chatOptionsQuestion.reply_id = parseInt(_chatOptionsQuestion.reply_id);\n      const _currentQuestion = { ...currentQuestion };\n      const opts = _currentQuestion.chat_options;\n      opts.push(_chatOptionsQuestion);\n      _currentQuestion.chat_options = opts;\n      _currentQuestion.type = 'ol';\n      _currentQuestion.reply_id = '';\n      this.setState(\n        {\n          currentQuestion: _currentQuestion,\n        },\n        () => this.handleBack()\n      );\n    } else {\n      if (currentQuestion.chat_label || currentQuestion.chat_desc) {\n        this.props.saveQuestions(currentQuestion);\n        // this.clearForm(currentQuestion);\n      } else {\n        this.showError('Please add chat label or description');\n      }\n    }\n  }\n  showError(msg) {\n    this.setState(\n      {\n        errors: {\n          '0': msg,\n        },\n      },\n      () => {\n        setTimeout(() => {\n          this.setState({\n            errors: {},\n          });\n        }, 5000);\n      }\n    );\n  }\n  clearForm() {\n    console.log('clearform');\n    this.props.saveQuestions(null);\n    this.setState({\n      ifEditing: false,\n      currentQuestion: {\n        chat_id: this.state.questions.length,\n        chat_label: '',\n        chat_desc: '',\n        chat_options: [],\n        type: '',\n        reply_id: '',\n      },\n    });\n  }\n  handleAddEditChatOption(currQuest) {\n    if (currQuest) {\n      const { currentQuestion } = this.state;\n      const found = currentQuestion.chat_options.filter(\n        (q) => q.chat_id === currQuest.chat_id\n      );\n      if (found.length) {\n        this.setState({\n          chatOptionsQuestion: found[0],\n          ifEditing: true\n        });\n      } else {\n        const id = currQuest.chat_id * 100 + currQuest.chat_options.length;\n        const _chatOptionsQuestion = this.state.chatOptionsQuestion;\n        _chatOptionsQuestion.chat_id = id;\n        this.setState({\n          chatOptionsQuestion: _chatOptionsQuestion,\n          ifEditing: true\n        });\n      }\n    }\n  }\n  handleBack() {\n    const _chatOptionsQuestion = { ...this.state.chatOptionsQuestion };\n    _chatOptionsQuestion.chat_desc = '';\n    _chatOptionsQuestion.chat_id = 0;\n    _chatOptionsQuestion.chat_label = '';\n    _chatOptionsQuestion.chat_options = [];\n    _chatOptionsQuestion.reply_id = '';\n    _chatOptionsQuestion.type = '';\n    this.setState({\n      chatOptionsQuestion: _chatOptionsQuestion,\n      ifEditing: false\n    });\n  }\n  render() {\n    const {\n      questions,\n      currentQuestion,\n      chatOptionsQuestion,\n      ifEditing,\n      errors,\n    } = this.state;\n    return (\n      <div className=\"sidebar col-12 col-md-6 col-sm-6\">\n        {chatOptionsQuestion.chat_id && ifEditing ? (\n          <ChatOptionQuestionEdit\n            questions={questions}\n            currentQuestion={currentQuestion}\n            chatOptionsQuestion={chatOptionsQuestion}\n            handleOnChange={(event, ifOption) =>\n              this.handleOnChange(event, ifOption)\n            }\n            handleBack={this.handleBack.bind(this)}\n            handleSubmit={(event, ifOption) =>\n              this.handleSubmit(event, ifOption)\n            }\n          />\n        ) : (\n            <>\n              <div className=\"form-group\">\n                <h3 htmlFor=\"jsonField\">If you already have json paste here</h3>\n                <textarea\n                  className=\"form-control\"\n                  rows=\"4\" id=\"jsonField\"\n                  value={this.props.jsonValue}\n                  placeholder=\"Paste your json here...\"\n                  onChange={this.props.handleJSONchange}></textarea>\n              </div>\n              <MainQuestionEdit\n                clearForm={this.clearForm.bind(this)}\n                handleAddEditChatOption={(ques) =>\n                  this.handleAddEditChatOption(ques)\n                }\n                questions={questions}\n                currentQuestion={currentQuestion}\n                handleOnChange={(event, ifOption) =>\n                  this.handleOnChange(event, ifOption)\n                }\n                handleSubmit={(event, ifOption) =>\n                  this.handleSubmit(event, ifOption)\n                }\n              />\n            </>\n          )}\n        {Object.keys(errors).length ? (\n          <div className=\"my-3\">\n            <h5>Errors:</h5>\n            {Object.keys(errors).map((key) => (\n              <div\n                className=\"alert alert-danger fade-scale-up\"\n                role=\"alert\"\n                key={'err_' + key}\n              >\n                {errors[key]}\n              </div>\n            ))}\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default Sidebar;\n","import React, { useState } from 'react';\n\nconst Questions = ({ questions, setEditQuestion, downloadJSON, searchText, handleSearch, deleteQuestion }) => {\n  const [deleteChatId, setDelete] = useState(-1);\n  let _questions = [];\n  if (searchText) {\n    const s = searchText.toLowerCase();\n    _questions = questions.filter(qu => qu.chat_id.toString().toLowerCase().includes(s) || qu.chat_label.toLowerCase().includes(s) || qu.chat_desc.toLowerCase().includes(s) || (qu.reply_id && qu.reply_id.toString().toLowerCase().includes(s)))\n  }\n  else {\n    _questions = questions\n  }\n  const handleDelete = (event, chat_id) => {\n    event.stopPropagation();\n    if (deleteChatId === chat_id) {\n      setDelete(-1)\n      deleteQuestion(event, chat_id)\n    } else {\n      setDelete(chat_id)\n    }\n  }\n  return (\n    <div className=\"questions col-12 col-md-6 col-sm-6\">\n      <div className=\"action-bar d-flex align-items-center justify-content-between\">\n        <h5 className=\"m-0 ml-2\">Chat boat Questions</h5>\n        <button className=\"btn btn-primary\" onClick={downloadJSON}>\n          Download JSON\n        </button>\n        <div className=\"input-group px-0 mt-3\" style={{ flexBasis: '100%' }}>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            value={searchText}\n            onChange={(event) => handleSearch(event.target.value)}\n          />\n          <div className=\"input-group-append\">\n            <button className=\"btn btn-secondary\" onClick={() => handleSearch('')}>Clear</button>\n          </div>\n        </div>\n      </div>\n      {(_questions &&\n        _questions.length) ?\n        _questions.map((que, index) => (\n          <div\n            className=\"card mb-2\"\n            key={'ques_' + index}\n            onClick={() => setEditQuestion(que)}\n          >\n            <div className=\"card-body\">\n              <h6 className=\"card-text d-flex align-items-center justify-content-between\">\n                <span>\n                  Chat ID# <strong>{que.chat_id}</strong>\n                </span>\n                {que.reply_id && <span>Reply Id# {que.reply_id}</span>}\n              </h6>\n              <h5 className=\"card-title\">{que.chat_label}</h5>\n              <p className=\"card-text\">{que.chat_desc}</p>\n              <button className={`btn ${deleteChatId === que.chat_id ? 'btn-danger' : 'btn-outline-danger'} btn-sm`} onClick={(event) => handleDelete(event, que.chat_id)}>{deleteChatId === que.chat_id ? 'Confirm Delete' : 'Delete'}</button>\n              {\n                deleteChatId === que.chat_id && (\n                  <button className={`btn btn-outline-light' btn-sm`} onClick={(event) => handleDelete(event, -1)}>Cancel</button>\n                )\n              }\n            </div>\n          </div>\n        )) : (\n          <div className=\"alert alert-info fade-scale-up\" role=\"alert\">\n            No questions added yet\n          </div>\n        )}\n    </div>\n  );\n};\n\nexport default Questions;\n","import React from 'react';\nimport './App.css';\nimport Sidebar from './components/Sidebar/';\nimport Questions from './components/Questions';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      questions: [],\n      editQuestion: null,\n      jsonValue: '',\n      errorMsg: [],\n      searchText: ''\n    };\n  }\n  componentDidMount() {\n    const localQues = localStorage.getItem('questions');\n    const localJson = localStorage.getItem('jsonValue');\n    let parsedLocalQs = null;\n    if (localQues) {\n      try {\n        parsedLocalQs = JSON.parse(localQues);\n      }\n      catch (e) {\n        console.log(e);\n      }\n    }\n    if (parsedLocalQs && localJson) {\n      this.setState({\n        questions: parsedLocalQs,\n        jsonValue: localJson,\n      })\n    }\n    else if (parsedLocalQs) {\n      this.setState({\n        questions: parsedLocalQs,\n      })\n    }\n    else if (localJson) {\n      this.setState({\n        jsonValue: localJson,\n      })\n    }\n  }\n  setEditQuestion(question) {\n    if (question) {\n      this.setState({\n        editQuestion: question,\n      });\n    }\n  }\n  handleSaveQuestion(question) {\n    if (question) {\n      const { questions } = this.state;\n      const found = questions.filter((q) => q.chat_id === question.chat_id);\n      let newQues = [];\n      if (found.length) {\n        newQues = questions.map((q) => {\n          if (q.chat_id === question.chat_id) {\n            return question;\n          }\n          return q;\n        });\n      } else {\n        newQues = [...questions, question];\n      }\n      this.saveQuestions(newQues);\n    } else {\n      this.setState({\n        editQuestion: null,\n      });\n    }\n  }\n  saveQuestions(newQues) {\n    this.setState({\n      questions: newQues,\n      editQuestion: null,\n    });\n    localStorage.setItem('questions', JSON.stringify(newQues));\n    this.showError('Questions updated successfully')\n  }\n  removeErr(timeout, timestamp) {\n    const { errorMsg } = this.state;\n    const filtered = errorMsg.filter(m => m.timestamp !== timestamp);\n    this.setState({\n      errorMsg: [...filtered],\n    });\n    clearTimeout(timeout);\n  }\n  showError(msg, timer) {\n    const { errorMsg } = this.state;\n    const timestamp = Date.now();\n    const errorObj = {\n      msg, timer: () => {\n        const timeout = setTimeout(() => {\n          this.removeErr(timeout, timestamp);\n        }, timer || 5000);\n        return timeout;\n      },\n      timestamp\n    }\n    this.setState(\n      {\n        errorMsg: [...errorMsg, errorObj],\n      },\n      () => {\n        const r = errorObj.timer();\n        console.log('tmr', r);\n      }\n    );\n  }\n  downloadJSON() {\n    const download = (filename, text) => {\n      var element = document.createElement('a');\n      element.setAttribute(\n        'href',\n        'data:text/plain;charset=utf-8,' + encodeURIComponent(text)\n      );\n      element.setAttribute('download', filename);\n\n      element.style.display = 'none';\n      document.body.appendChild(element);\n\n      element.click();\n\n      document.body.removeChild(element);\n    };\n    download('questions.json', JSON.stringify(this.state.questions));\n    localStorage.setItem('questions', JSON.stringify(this.state.questions));\n  }\n  handleJSONchange(event) {\n    const value = event.target.value;\n    try {\n      const json = JSON.parse(value);\n      if (json && json.length) {\n        const valids = json.filter(j => {\n          if (j.hasOwnProperty('chat_id') && j.hasOwnProperty('chat_label') && j.hasOwnProperty('chat_options') &&\n            j.hasOwnProperty('type') && j.hasOwnProperty('reply_id') && j.hasOwnProperty('chat_desc')) {\n            return true;\n          }\n          else {\n            this.showError('Following field has missing keys\\n' + JSON.stringify(j), 20000)\n          }\n          return false;\n        })\n        console.log(valids)\n        localStorage.setItem('jsonValue', value);\n        localStorage.setItem('questions', JSON.stringify(json));\n        this.setState({\n          jsonValue: value,\n          questions: json,\n        })\n      }\n    }\n    catch (e) {\n      console.log(e);\n      this.setState({\n        jsonValue: value,\n      })\n      value !== '' && this.showError('Invalid json format')\n    }\n  }\n  handleSearch(value) {\n    this.setState({\n      searchText: value,\n    })\n  }\n  deleteQuestion(event, chat_id) {\n    event.stopPropagation();\n    const { questions } = this.state;\n    const filtered = questions.filter(q => q.chat_id !== chat_id);\n    this.saveQuestions(filtered);\n  }\n  render() {\n    const { questions, editQuestion, jsonValue, errorMsg, searchText } = this.state;\n    return (\n      <div className=\"App container-fluid\">\n        {errorMsg.length > 0 &&\n          <div className=\"toast-wrapper\">\n            {\n              errorMsg.map(m => (\n                <div className=\"alert alert-dark my-2 p-3 toast border-0\" role=\"alert\" key={m.msg}>\n                  {m.msg}\n                  {m.timestamp}\n                  <br></br>\n                  <button className=\"btn btn-outline-light my-2\" onClick={() => this.removeErr(m.timer(), m.timestamp)}>Done</button>\n                </div>\n              ))\n            }\n          </div>\n        }\n        <div className=\"row\">\n          <Sidebar\n            jsonValue={jsonValue}\n            handleJSONchange={this.handleJSONchange.bind(this)}\n            questions={questions}\n            editQuestion={editQuestion}\n            saveQuestions={this.handleSaveQuestion.bind(this)}\n          />\n          <Questions\n            searchText={searchText}\n            handleSearch={this.handleSearch.bind(this)}\n            downloadJSON={this.downloadJSON.bind(this)}\n            questions={questions}\n            editQuestion={editQuestion}\n            setEditQuestion={this.setEditQuestion.bind(this)}\n            deleteQuestion={this.deleteQuestion.bind(this)}\n          />\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}